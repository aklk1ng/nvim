{
  "def(static class method)": {
    "prefix": "def static class method",
    "body": [
      "@staticmethod",
      "def ${1:funcname}(${2:parameter_list}):",
      "\t${3:pass}"
    ],
    "description": "Code snippet for a static class method"
  },
  "if(main)": {
    "prefix": "__main__",
    "body": [
      "if __name__ == \"__main__\":",
      "    ${1:pass}"
    ],
    "description": "Code snippet for a `if __name__ == \"__main__\": ...` block"
  },
  "# coding=utf-8": {
    "prefix": "enco",
    "body": "encoding=\"utf-8\"",
    "description": "Set default python3 encoding specification to utf-8, by default this is the encoding for python3.x as it is mentioned in pep-3120."
  },
  "New property": {
    "prefix": "property",
    "body": "@property\ndef ${1:foo}(self):\n    \"\"\"${2:The $1 property.}\"\"\"\n    ${3:return self._$1}\n@${4:$1}.setter\ndef ${5:$1}(self, value):\n    ${6:self._$1} = value",
    "description": "New property: get and set via decorator"
  }
}

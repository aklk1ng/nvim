{
  "it": {
    "prefix": "it",
    "body": [
      "$1.begin(), $1.end()"
    ]
  },
  "rit": {
    "prefix": "rit",
    "body": [
      "$1.rbegin(), $1.rend()"
    ]
  },
  "Starter for cpp": {
    "prefix": "sst",
    "body": [
      "#include <iostream>\nusing namespace std;\n\nint main(int argc, char *argv[]) {\n\t$0\n\treturn 0;\n}"
    ],
    "description": "starter for cpp"
  },
  "Main function": {
    "prefix": "main",
    "body": [
      "int main(int argc, char *argv[]) {\n\t$0\n\treturn 0;\n}"
    ],
    "description": "main function"
  },
  "codeforces": {
    "prefix": "cf",
    "body": [
      "#include <bits/stdc++.h>\nusing namespace std;\n#define ll long long\n\nvoid solve() {\n\t$0\n}\n\nint main() {\n\tios::sync_with_stdio(false);\n\tcin.tie(nullptr);\n\tint tt;\n\tcin >> tt;\n\twhile (tt--) {\n\t\tsolve();\n\t}\n\n\treturn 0;\n}"
    ],
    "description": "codeforces"
  },
  "atcoder": {
    "prefix": "atc",
    "body": [
      "#include <bits/stdc++.h>\nusing namespace std;\n#define ll long long\n\nvoid solve() {\n\t$0\n}\n\nint main() {\n\tios::sync_with_stdio(false);\n\tcin.tie(nullptr);\n\tsolve();\n\n\treturn 0;\n}"
    ],
    "description": "atcoder"
  },
  "leetcode": {
    "prefix": "leetcode",
    "body": [
      "#include <bits/stdc++.h>\n\nusing namespace std;\n\nclass Solution {\npublic:\n\t$0\n};"
    ],
    "description": "leetcode"
  },
  "leetcode_list": {
    "prefix": "leetcode_list",
    "body": [
      "#include <bits/stdc++.h>\n\nusing namespace std;\n\nstruct ListNode {\n\tint val;\n\tListNode *next;\n\tListNode() : val(-1), next(NULL) {}\n\tListNode(int x) : val(x), next(NULL) {}\n\tListNode(int x, ListNode *next) : val(x), next(next) {}\n};\n\nclass Solution {\npublic:\n\t$0\n};"
    ],
    "description": "leetcode_list"
  },
  "leetcode_tree": {
    "prefix": "leetcode_tree",
    "body": [
      "#include <bits/stdc++.h>\n\nusing namespace std;\n\nstruct TreeNode {\n\tint val;\n\tTreeNode *left;\n\tTreeNode *right;\n\tTreeNode() : val(0), left(nullptr), right(nullptr) {}\n\tTreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n\tTreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n};\n\nclass Solution {\npublic:\n\t$0\n};"
    ],
    "description": "leetcode_tree"
  }
}
